// <auto-generated />
using System;
using BreadGiverApp.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BreadGiverApp.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200712014341_Initial-1")]
    partial class Initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BreadGiver.Models.CarroCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CantidadTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IVA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorTotal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarroCompra");
                });

            modelBuilder.Entity("BreadGiver.Models.Cotizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CantidadTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IVA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioCotizacionId")
                        .HasColumnType("int");

                    b.Property<string>("ValorTotal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCotizacionId");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("BreadGiver.Models.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bancoAsociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreMetodo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetodoPago");
                });

            modelBuilder.Entity("BreadGiver.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("BreadGiver.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarroUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("RutUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarroUsuarioId");

                    b.HasIndex("RolUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BreadGiver.Models.Cotizacion", b =>
                {
                    b.HasOne("BreadGiver.Models.Usuario", "UsuarioCotizacion")
                        .WithMany()
                        .HasForeignKey("UsuarioCotizacionId");
                });

            modelBuilder.Entity("BreadGiver.Models.Usuario", b =>
                {
                    b.HasOne("BreadGiver.Models.CarroCompra", "CarroUsuario")
                        .WithMany()
                        .HasForeignKey("CarroUsuarioId");

                    b.HasOne("BreadGiver.Models.Rol", "RolUsuario")
                        .WithMany()
                        .HasForeignKey("RolUsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
